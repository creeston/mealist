/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = Record<string, never>;

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Restaurant: {
      id?: string;
      name: string;
      address: string;
      city: string;
      description?: string;
      wifiName?: string;
      wifiPassword?: string;
      instagramUrl?: string;
      vkUrl?: string;
      facebookUrl?: string;
      tripAdvisorUrl?: string;
    };
    CreateMenuRequest: {
      name?: string;
      /** Format: binary */
      file: string;
    };
    Menu: {
      id?: string;
      name: string;
      images?: string[];
      status?: string;
      menuCompressed?: boolean;
      dishesCount?: number;
      pagesCount?: number;
      parsingProgress?: number;
      previewImageUrl?: string;
      originalFileUrl?: string;
      stopListEnabled?: boolean;
      stopColor?: string;
      stopStyle?: string;
      /** Format: date-time */
      creationDate?: string;
      markups?: components["schemas"]["MenuLine"][][];
    };
    MenuLine: {
      text?: string;
      tag?: string;
      box?: number[][];
      x1: number;
      y1: number;
      x2: number;
      y2: number;
      editSelected?: boolean;
      viewSelected?: boolean;
      hover?: boolean;
      children?: components["schemas"]["MenuLine"][];
    };
    Code: {
      menuId: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
