/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = Record<string, never>;

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Restaurant: {
      id?: string;
      name: string;
      address: string;
      city: string;
      description?: string;
      wifiName?: string;
      wifiPassword?: string;
      instagramUrl?: string;
      vkUrl?: string;
      facebookUrl?: string;
      tripAdvisorUrl?: string;
    };
    CreateMenuRequest: {
      name?: string;
      /** @enum {string} */
      language?: "eng" | "rus" | "ukr" | "bel" | "pol" | "deu";
      /** Format: binary */
      file: string;
    };
    Menu: {
      id?: string;
      name: string;
      /** @enum {string} */
      status?: "NOT_PARSED" | "PARSING_IN_PROGRESS" | "PARSING_FAILED" | "PARSING_COMPLETED" | "OCR_IN_PROGRESS" | "OCR_FAILED" | "OCR_COMPLETED" | "REVIEWED";
      dishesCount?: number;
      originalFileUrl?: string;
      stopColor?: string;
      stopStyle?: string;
      /** Format: date-time */
      creationDate?: string;
      /** Format: date-time */
      modificationDate?: string;
      pages?: components["schemas"]["MenuPage"][];
    };
    MenuPage: {
      pageNumber: number;
      imageUrl: string;
      markup?: components["schemas"]["MenuLine"][];
    };
    MenuLine: {
      text?: string;
      x1: number;
      y1: number;
      x2: number;
      y2: number;
    };
    Code: {
      menuId: number;
    };
    QrMenu: {
      id?: string;
      name?: string;
      displayName?: string;
      restaurant?: components["schemas"]["Restaurant"];
      sectionsToShow?: string[];
      primaryColor?: string;
      secondaryColor?: string;
      fontColor?: string;
      scanCount?: number;
      stopList?: string[];
      loadingPlaceholderIndex?: number;
      loadingPlaceholderUrl?: string;
      urlSuffix?: string;
      items?: components["schemas"]["QrMenuItem"][];
      /** Format: date-time */
      creationDate?: string;
      /** Format: date-time */
      modificationDate?: string;
    };
    QrMenuItem: {
      menu?: components["schemas"]["Menu"];
      title?: string;
      thumbnailIndex?: number;
    };
    CreateQrMenuRequest: {
      name?: string;
      displayName?: string;
      restaurantId: string;
      sectionsToShow?: string[];
      primaryColor?: string;
      secondaryColor?: string;
      fontColor?: string;
      loadingPlaceholderIndex?: number;
      /** Format: binary */
      loadingPlaceholderFile?: string;
      urlSuffix?: string;
      items?: components["schemas"]["CreateQrMenuItem"][];
    };
    CreateQrMenuItem: {
      title: string;
      menuId: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
