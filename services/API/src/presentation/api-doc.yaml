openapi: 3.0.0
info:
  title: Mealist API
  version: 1.0.0
paths:
  /menus:
    get:
      operationId: getAllMenus
      tags:
        - menus
      summary: Get all menus
      responses:
        "200":
          description: A list of menus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Menu"
    post:
      operationId: createMenu
      tags:
        - menus
      summary: Create a menu
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CreateMenuRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Menu"
  /menus/{menuId}:
    get:
      operationId: getMenuById
      tags:
        - menus
      summary: Get a menu by ID
      parameters:
        - name: menuId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A menu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Menu"
  /menus/{menuId}/pages:
    put:
      operationId: updateMenuPages
      tags:
        - menus
      summary: Update menu pages
      parameters:
        - name: menuId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MenuPage"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Menu"
  /restaurants:
    get:
      operationId: getAllRestaurants
      tags:
        - restaurants
      summary: Get all restaurants
      responses:
        "200":
          description: A list of restaurants
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Restaurant"
    post:
      operationId: createRestaurant
      tags:
        - restaurants
      summary: Create a restaurant
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restaurant"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
  /restaurants/{restaurantId}:
    get:
      operationId: getRestaurantById
      tags:
        - restaurants
      summary: Get a restaurant by ID
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A restaurant
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
    put:
      operationId: updateRestaurant
      tags:
        - restaurants
      summary: Update a restaurant
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Restaurant"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Restaurant"
    delete:
      operationId: deleteRestaurant
      tags:
        - restaurants
      summary: Delete a restaurant
      parameters:
        - name: restaurantId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content

  /qrmenus:
    get:
      operationId: getAllQrMenus
      tags:
        - qrmenus
      summary: Get all qr menus
      responses:
        "200":
          description: A list of qr menus
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QrMenu"
    post:
      operationId: createQrMenu
      tags:
        - qrmenus
      summary: Create a qr menu
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                createRequest:
                  $ref: "#/components/schemas/CreateQrMenuRequest"
            encoding:
              createRequest:
                contentType: application/json
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQrMenuRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QrMenu"
  /qrmenus/{qrMenuId}:
    get:
      operationId: getQrMenuById
      tags:
        - qrmenus
      summary: Get a qr menu by ID
      parameters:
        - name: qrMenuId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A qr menu
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QrMenu"
    put:
      operationId: updateQrMenu
      tags:
        - qrmenus
      summary: Update a qr menu
      parameters:
        - name: qrMenuId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QrMenu"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QrMenu"
    delete:
      operationId: deleteQrMenu
      tags:
        - qrmenus
      summary: Delete a qr menu
      parameters:
        - name: qrMenuId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No content
components:
  schemas:
    Restaurant:
      type: "object"
      properties:
        id:
          type: string
        name:
          type: string
        address:
          type: string
        city:
          type: string
        description:
          type: string
        wifiName:
          type: string
        wifiPassword:
          type: string
        instagramUrl:
          type: string
        vkUrl:
          type: string
        facebookUrl:
          type: string
        tripAdvisorUrl:
          type: string
      required:
        - name
        - address
        - city
    CreateMenuRequest:
      type: "object"
      properties:
        name:
          type: string
        language:
          type: string
          enum:
            - "eng"
            - "rus"
            - "ukr"
            - "bel"
            - "pol"
            - "deu"
        file:
          type: string
          format: binary
      required:
        - file
    Menu:
      type: "object"
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - "NOT_PARSED"
            - "PARSING_IN_PROGRESS"
            - "PARSING_FAILED"
            - "PARSING_COMPLETED"
            - "OCR_IN_PROGRESS"
            - "OCR_FAILED"
            - "OCR_COMPLETED"
            - "REVIEWED"
        dishesCount:
          type: integer
        originalFileUrl:
          type: string
        stopColor:
          type: string
        stopStyle:
          type: string
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        pages:
          type: array
          items:
            $ref: "#/components/schemas/MenuPage"
      required:
        - name
    MenuPage:
      type: "object"
      properties:
        pageNumber:
          type: integer
        imageUrl:
          type: string
        markup:
          type: array
          items:
            $ref: "#/components/schemas/MenuLine"
      required:
        - pageNumber
        - imageUrl
    MenuLine:
      type: "object"
      properties:
        text:
          type: string
        x1:
          type: number
        y1:
          type: number
        x2:
          type: number
        y2:
          type: number
      required:
        - x1
        - x2
        - y1
        - y2
    Code:
      type: "object"
      properties:
        menuId:
          type: integer
      required:
        - menuId
    ReadOnlyQrMenu:
      type: "object"
      properties:
        title:
          type: string
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        sectionsToShow:
          type: array
          items:
            type: string
        style:
          $ref: "#/components/schemas/QrMenuStyle"
        loadingPlaceholderUrl:
          type: string
        menus:
          type: array
          items:
            $ref: "#/components/schemas/ReadonlyQrMenuItem"
      required:
        - restaurant
        - sectionsToShow
        - style
        - loadingPlaceholderUrl
        - menus
    QrMenu:
      type: "object"
      properties:
        id:
          type: string
        name:
          type: string
        urlSuffix:
          type: string
        title:
          type: string
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        sectionsToShow:
          type: array
          items:
            type: string
        style:
          $ref: "#/components/schemas/QrMenuStyle"
        scanCount:
          type: integer
        loadingPlaceholderMenuIndex:
          type: integer
        loadingPlaceholderUrl:
          type: string
        menus:
          type: array
          items:
            $ref: "#/components/schemas/QrMenuItem"
        creationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
      required:
        - id
        - name
        - restaurant
        - urlSuffix
        - sectionsToShow
        - style
        - loadingPlaceholderUrl
        - menus
        - creationDate
    QrMenuItem:
      type: "object"
      properties:
        stopColor:
          type: string
        stopStyle:
          type: string
        title:
          type: string
        menu:
          $ref: "#/components/schemas/Menu"
    ReadonlyQrMenuItem:
      type: "object"
      properties:
        stopColor:
          type: string
        stopStyle:
          type: string
        title:
          type: string
        pages:
          type: array
          items:
            $ref: "#/components/schemas/MenuPage"
    QrMenuStyle:
      type: "object"
      properties:
        headerColor:
          type: string
        actionsColor:
          type: string
        fontColor:
          type: string
        backgroundColor:
          type: string
    CreateQrMenuRequest:
      type: "object"
      properties:
        name:
          type: string
        urlSuffix:
          type: string
        title:
          type: string
        restaurantId:
          type: string
        sectionsToShow:
          type: array
          items:
            type: string
        style:
          $ref: "#/components/schemas/QrMenuStyle"
        loadingPlaceholder:
          $ref: "#/components/schemas/CreateLoadingPlaceholderRequest"
        menus:
          type: array
          items:
            $ref: "#/components/schemas/CreateQrMenuItem"
      required:
        - restaurantId
        - name
        - urlSuffix
        - sectionsToShow
        - style
        - loadingPlaceholder
        - menus
    CreateLoadingPlaceholderRequest:
      type: "object"
      properties:
        menuIndex:
          type: integer
    CreateQrMenuItem:
      type: "object"
      properties:
        title:
          type: string
        menuId:
          type: string
      required:
        - title
        - menuId
